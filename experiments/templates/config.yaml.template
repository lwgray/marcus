# Marcus Multi-Agent Experiment Configuration
# Copy this template to your experiment directory and customize

# Project name (will be created in Marcus/Planka)
project_name: "Your Project Name"

# Project description/specification file (relative to experiment dir)
project_spec_file: "project_spec.md"

# Marcus project options
project_options:
  complexity: "standard"  # prototype | standard | enterprise
  provider: "planka"      # planka | github | linear
  mode: "new_project"     # new_project | auto | select_project

# Agent definitions
# NOTE: All agents are "unicorn" full-stack developers capable of any task
# The skills list is a preference hint to Marcus, NOT a limitation
# Agents MUST accept any task assigned regardless of their listed skills
agents:
  - id: "agent_unicorn_1"
    name: "Unicorn Developer 1"
    role: "full-stack"
    skills:
      - "python"
      - "javascript"
      - "typescript"
      - "react"
      - "fastapi"
      - "sqlalchemy"
      - "postgresql"
      - "database-design"
      - "rest-api"
      - "jwt"
      - "security"
      - "pytest"
      - "integration-testing"
    subagents: 0

  - id: "agent_unicorn_2"
    name: "Unicorn Developer 2"
    role: "full-stack"
    skills:
      - "python"
      - "javascript"
      - "typescript"
      - "react"
      - "fastapi"
      - "sqlalchemy"
      - "postgresql"
      - "database-design"
      - "rest-api"
      - "jwt"
      - "security"
      - "pytest"
      - "integration-testing"
    subagents: 0

  - id: "agent_unicorn_3"
    name: "Unicorn Developer 3"
    role: "full-stack"
    skills:
      - "python"
      - "javascript"
      - "typescript"
      - "react"
      - "fastapi"
      - "sqlalchemy"
      - "postgresql"
      - "database-design"
      - "rest-api"
      - "jwt"
      - "security"
      - "pytest"
      - "integration-testing"
    subagents: 0

  - id: "agent_unicorn_4"
    name: "Unicorn Developer 4"
    role: "full-stack"
    skills:
      - "python"
      - "javascript"
      - "typescript"
      - "react"
      - "fastapi"
      - "sqlalchemy"
      - "postgresql"
      - "database-design"
      - "rest-api"
      - "jwt"
      - "security"
      - "pytest"
      - "integration-testing"
    subagents: 0

# Optional: Timeout settings (in seconds)
timeouts:
  project_creation: 300  # 5 minutes
  agent_startup: 60      # 1 minute per agent
