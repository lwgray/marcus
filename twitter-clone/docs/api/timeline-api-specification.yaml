openapi: 3.0.3
info:
  title: Twitter Clone - Timeline API
  description: |
    Real-time timeline feed API for Twitter Clone application.

    ## Overview
    This API provides access to three types of timelines:
    - **Home Timeline**: Authenticated user's personalized feed from followed users
    - **User Timeline**: Public timeline of a specific user's tweets
    - **Global Timeline**: Public feed of all tweets (future feature)

    ## Feed Architecture
    - **Hybrid Push-Pull Model**: Fan-out on write for regular users, pull on read for celebrities
    - **Multi-Layer Caching**: Redis for hot data with 30-60 second TTL
    - **Cursor-Based Pagination**: Efficient pagination using opaque cursors
    - **Algorithmic Ranking**: Optional ML-based ranking for relevance

    ## Performance Targets
    - Timeline load latency: < 200ms (p95)
    - Cache hit rate: 95%+
    - Real-time delivery: < 5 seconds for new tweets

    ## Related Documentation
    - Design Document: docs/design/realtime_timeline_feeds_research_and_design.md
    - Quick Reference: docs/api/timeline_api_quick_reference.md
    - Architecture: docs/architecture/
  version: 1.0.0
  contact:
    name: Worker Agent 16
    email: dev@twitter-clone.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: https://api.twitter-clone.com
    description: Production server
  - url: https://staging-api.twitter-clone.com
    description: Staging server
  - url: http://localhost:8000
    description: Local development server

tags:
  - name: Timeline
    description: Timeline feed operations for home and user timelines
  - name: Tweets
    description: Tweet CRUD operations (create, read, delete)
  - name: Interactions
    description: Tweet interactions (like, retweet, reply)

paths:
  /api/v1/timeline/home:
    get:
      tags:
        - Timeline
      summary: Get authenticated user's home timeline
      description: |
        Retrieve the home timeline for the authenticated user, containing tweets from
        accounts they follow. Supports both chronological and algorithmic sorting.

        **Features**:
        - Cursor-based pagination for efficient loading
        - Algorithm selection (chronological vs. ML-ranked)
        - Real-time updates via WebSocket (see WebSocket API)
        - Private caching (30 second TTL)

        **Performance**:
        - P95 latency: < 200ms
        - Cache hit rate: 95%+
        - Supports up to 100 tweets per request

        **Best Practices**:
        - Use cursor pagination for smooth infinite scroll
        - Set reasonable limit (20-50) for mobile clients
        - Combine with WebSocket for real-time updates
        - Use ETag for conditional requests
      operationId: getHomeTimeline
      security:
        - bearerAuth: []
      parameters:
        - name: limit
          in: query
          description: Number of tweets to return per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          example: 20
        - name: cursor
          in: query
          description: |
            Pagination cursor from previous response. Opaque string that should not
            be parsed by clients. Omit for first page.
          required: false
          schema:
            type: string
          example: "1697190000"
        - name: algorithm
          in: query
          description: |
            Timeline sorting algorithm:
            - `chronological`: Newest first by timestamp (simple, predictable)
            - `algorithmic`: ML-ranked by relevance, engagement, and recency
          required: false
          schema:
            type: string
            enum: [chronological, algorithmic]
            default: algorithmic
          example: chronological
      responses:
        '200':
          description: Timeline successfully retrieved
          headers:
            Cache-Control:
              description: Private caching with 30 second max-age
              schema:
                type: string
                example: "private, max-age=30"
            ETag:
              description: Entity tag for conditional requests
              schema:
                type: string
                example: '"abc123def456"'
            X-RateLimit-Limit:
              description: Maximum requests allowed in time window
              schema:
                type: integer
                example: 180
            X-RateLimit-Remaining:
              description: Remaining requests in current time window
              schema:
                type: integer
                example: 175
            X-RateLimit-Reset:
              description: Unix timestamp when rate limit resets
              schema:
                type: integer
                example: 1697194800
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimelineResponse'
              examples:
                chronologicalTimeline:
                  summary: Chronological timeline with tweets
                  value:
                    success: true
                    data:
                      tweets:
                        - id: "1234567890"
                          user:
                            id: "9876543210"
                            username: "johndoe"
                            display_name: "John Doe"
                            avatar_url: "https://cdn.example.com/avatars/johndoe.jpg"
                            is_verified: false
                          content: "Hello, Twitter Clone! This is my first tweet."
                          created_at: "2025-10-13T10:30:00Z"
                          like_count: 42
                          retweet_count: 7
                          reply_count: 3
                          is_liked: false
                          is_retweeted: false
                          parent_tweet: null
                        - id: "1234567891"
                          user:
                            id: "9876543211"
                            username: "janedoe"
                            display_name: "Jane Doe"
                            avatar_url: "https://cdn.example.com/avatars/janedoe.jpg"
                            is_verified: true
                          content: "Excited to be here! #TwitterClone"
                          created_at: "2025-10-13T10:25:00Z"
                          like_count: 15
                          retweet_count: 3
                          reply_count: 1
                          is_liked: true
                          is_retweeted: false
                          parent_tweet: null
                      next_cursor: "1697190000"
                      has_more: true
                emptyTimeline:
                  summary: Empty timeline (new user)
                  value:
                    success: true
                    data:
                      tweets: []
                      next_cursor: null
                      has_more: false
        '304':
          description: Not Modified (ETag match, content unchanged)
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/timeline/user/{user_id}:
    get:
      tags:
        - Timeline
      summary: Get specific user's timeline
      description: |
        Retrieve the public timeline for a specific user, containing only their tweets.
        No authentication required for public timelines.

        **Features**:
        - Filter replies and retweets
        - Cursor-based pagination
        - Public caching (60 second TTL)
        - CDN-friendly for popular users

        **Performance**:
        - P95 latency: < 200ms
        - CDN cache hit rate: 90%+ for popular users
        - Supports up to 100 tweets per request

        **Best Practices**:
        - Use CDN caching for celebrity timelines
        - Filter out replies for cleaner profile view
        - Include retweets by default for complete view
      operationId: getUserTimeline
      parameters:
        - name: user_id
          in: path
          description: Unique identifier of the user
          required: true
          schema:
            type: string
          example: "9876543210"
        - name: limit
          in: query
          description: Number of tweets to return per page
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          example: 20
        - name: cursor
          in: query
          description: Pagination cursor from previous response
          required: false
          schema:
            type: string
          example: "1697190000"
        - name: include_replies
          in: query
          description: Include replies to other tweets
          required: false
          schema:
            type: boolean
            default: false
          example: false
        - name: include_retweets
          in: query
          description: Include retweets of other users' tweets
          required: false
          schema:
            type: boolean
            default: true
          example: true
      responses:
        '200':
          description: User timeline successfully retrieved
          headers:
            Cache-Control:
              description: Public caching with 60 second max-age
              schema:
                type: string
                example: "public, max-age=60"
            ETag:
              description: Entity tag for conditional requests
              schema:
                type: string
                example: '"xyz789abc123"'
            X-RateLimit-Limit:
              description: Maximum requests allowed in time window
              schema:
                type: integer
                example: 900
            X-RateLimit-Remaining:
              description: Remaining requests in current time window
              schema:
                type: integer
                example: 895
            X-RateLimit-Reset:
              description: Unix timestamp when rate limit resets
              schema:
                type: integer
                example: 1697194800
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTimelineResponse'
              examples:
                userTimeline:
                  summary: User timeline with profile and tweets
                  value:
                    success: true
                    data:
                      user:
                        id: "9876543210"
                        username: "johndoe"
                        display_name: "John Doe"
                        bio: "Software developer building cool stuff"
                        avatar_url: "https://cdn.example.com/avatars/johndoe.jpg"
                        followers_count: 1500
                        following_count: 300
                        tweets_count: 450
                        is_verified: false
                        created_at: "2025-01-15T08:00:00Z"
                      tweets:
                        - id: "1234567890"
                          user:
                            id: "9876543210"
                            username: "johndoe"
                            display_name: "John Doe"
                            avatar_url: "https://cdn.example.com/avatars/johndoe.jpg"
                            is_verified: false
                          content: "Working on a new feature today! #coding"
                          created_at: "2025-10-13T10:30:00Z"
                          like_count: 42
                          retweet_count: 7
                          reply_count: 3
                          is_liked: false
                          is_retweeted: false
                          parent_tweet: null
                      next_cursor: "1697190000"
                      has_more: true
        '304':
          description: Not Modified (ETag match)
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/tweets:
    post:
      tags:
        - Tweets
      summary: Create a new tweet
      description: |
        Create a new tweet with text content. Optionally reply to another tweet
        by providing parent_tweet_id.

        **Features**:
        - Content validation (1-280 characters)
        - Reply threading support
        - Async fan-out to followers (< 5 seconds)
        - Real-time delivery via WebSocket

        **Rate Limits**:
        - 300 tweets per 3 hours (global)
        - 50 tweets per 15 minutes (burst protection)

        **Fan-out Behavior**:
        - Regular users (< 10k followers): Push to all follower timelines
        - Celebrities (> 10k followers): Pull on read (indexed for search)
      operationId: createTweet
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTweetRequest'
            examples:
              newTweet:
                summary: Create a new original tweet
                value:
                  content: "Hello, world! This is my new tweet."
                  parent_tweet_id: null
              replyTweet:
                summary: Reply to an existing tweet
                value:
                  content: "Great point! I completely agree."
                  parent_tweet_id: "1234567890"
      responses:
        '201':
          description: Tweet created successfully
          headers:
            Location:
              description: URL of the created tweet
              schema:
                type: string
                example: "/api/v1/tweets/1234567891"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetResponse'
              examples:
                createdTweet:
                  summary: Successfully created tweet
                  value:
                    success: true
                    data:
                      tweet:
                        id: "1234567891"
                        user:
                          id: "9876543210"
                          username: "johndoe"
                          display_name: "John Doe"
                          avatar_url: "https://cdn.example.com/avatars/johndoe.jpg"
                          is_verified: false
                        content: "Hello, world! This is my new tweet."
                        created_at: "2025-10-13T11:00:00Z"
                        like_count: 0
                        retweet_count: 0
                        reply_count: 0
                        is_liked: false
                        is_retweeted: false
                        parent_tweet: null
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          description: Parent tweet not found (when replying)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                parentNotFound:
                  summary: Parent tweet does not exist
                  value:
                    success: false
                    error:
                      code: "PARENT_TWEET_NOT_FOUND"
                      message: "Parent tweet not found"
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/tweets/{tweet_id}:
    get:
      tags:
        - Tweets
      summary: Get a single tweet
      description: |
        Retrieve a single tweet by ID. No authentication required for public tweets.

        **Caching**:
        - Public cache with 300 second (5 minute) TTL
        - CDN-friendly for popular tweets
        - ETag support for conditional requests

        **Performance**:
        - P95 latency: < 100ms
        - Cache hit rate: 98%+ for popular tweets
      operationId: getTweet
      parameters:
        - name: tweet_id
          in: path
          description: Unique identifier of the tweet
          required: true
          schema:
            type: string
          example: "1234567890"
      responses:
        '200':
          description: Tweet successfully retrieved
          headers:
            Cache-Control:
              description: Public caching with 300 second max-age
              schema:
                type: string
                example: "public, max-age=300"
            ETag:
              description: Entity tag for conditional requests
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetResponse'
        '304':
          description: Not Modified (ETag match)
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Tweets
      summary: Delete a tweet
      description: |
        Delete a tweet owned by the authenticated user. Soft delete implementation.

        **Side Effects**:
        - Tweet marked as deleted (soft delete)
        - Removed from all timelines (cache invalidation)
        - Counters decremented asynchronously
        - Cannot be undone

        **Permissions**:
        - Only the tweet author can delete their tweets
        - Admins can delete any tweet (future feature)
      operationId: deleteTweet
      security:
        - bearerAuth: []
      parameters:
        - name: tweet_id
          in: path
          description: Unique identifier of the tweet to delete
          required: true
          schema:
            type: string
          example: "1234567890"
      responses:
        '200':
          description: Tweet deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "Tweet deleted successfully"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          description: Forbidden - Cannot delete someone else's tweet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                notOwner:
                  summary: User does not own this tweet
                  value:
                    success: false
                    error:
                      code: "FORBIDDEN"
                      message: "You can only delete your own tweets"
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/tweets/{tweet_id}/like:
    post:
      tags:
        - Interactions
      summary: Like a tweet
      description: |
        Like a tweet. Idempotent operation - multiple requests return same result.

        **Features**:
        - Idempotent (safe to call multiple times)
        - Returns current like state
        - Updates like_count immediately
        - Triggers notification to tweet author

        **Rate Limit**:
        - 1000 likes per day
      operationId: likeTweet
      security:
        - bearerAuth: []
      parameters:
        - name: tweet_id
          in: path
          description: Unique identifier of the tweet to like
          required: true
          schema:
            type: string
          example: "1234567890"
      responses:
        '200':
          description: Tweet liked successfully (or already liked)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LikeResponse'
              examples:
                liked:
                  summary: Successfully liked tweet
                  value:
                    success: true
                    data:
                      tweet_id: "1234567890"
                      is_liked: true
                      like_count: 43
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Interactions
      summary: Unlike a tweet
      description: |
        Remove like from a tweet. Idempotent operation.

        **Features**:
        - Idempotent (safe to call multiple times)
        - Returns current like state
        - Updates like_count immediately

        **Rate Limit**:
        - 1000 unlikes per day (shared with likes)
      operationId: unlikeTweet
      security:
        - bearerAuth: []
      parameters:
        - name: tweet_id
          in: path
          description: Unique identifier of the tweet to unlike
          required: true
          schema:
            type: string
          example: "1234567890"
      responses:
        '200':
          description: Tweet unliked successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LikeResponse'
              examples:
                unliked:
                  summary: Successfully unliked tweet
                  value:
                    success: true
                    data:
                      tweet_id: "1234567890"
                      is_liked: false
                      like_count: 42
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/tweets/{tweet_id}/retweet:
    post:
      tags:
        - Interactions
      summary: Retweet a tweet
      description: |
        Retweet a tweet to share with your followers. Creates a new retweet object.

        **Features**:
        - Creates new retweet entity
        - Appears in follower timelines
        - Increases retweet_count
        - Triggers notification to original author

        **Rate Limit**:
        - 300 retweets per 3 hours
      operationId: retweetTweet
      security:
        - bearerAuth: []
      parameters:
        - name: tweet_id
          in: path
          description: Unique identifier of the tweet to retweet
          required: true
          schema:
            type: string
          example: "1234567890"
      responses:
        '200':
          description: Tweet retweeted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RetweetResponse'
              examples:
                retweeted:
                  summary: Successfully retweeted
                  value:
                    success: true
                    data:
                      retweet:
                        id: "9876543210"
                        original_tweet_id: "1234567890"
                        user_id: "9876543211"
                        created_at: "2025-10-13T11:05:00Z"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '409':
          description: Already retweeted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                alreadyRetweeted:
                  summary: User already retweeted this tweet
                  value:
                    success: false
                    error:
                      code: "ALREADY_RETWEETED"
                      message: "You have already retweeted this tweet"
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /api/v1/tweets/{tweet_id}/reply:
    post:
      tags:
        - Interactions
      summary: Reply to a tweet
      description: |
        Create a reply to a tweet. This is a convenience endpoint equivalent to
        POST /api/v1/tweets with parent_tweet_id set.

        **Features**:
        - Creates threaded conversation
        - Notifies original author
        - Appears in replies section
        - Increases reply_count

        **Rate Limit**:
        - 300 replies per 3 hours
      operationId: replyToTweet
      security:
        - bearerAuth: []
      parameters:
        - name: tweet_id
          in: path
          description: Unique identifier of the tweet to reply to
          required: true
          schema:
            type: string
          example: "1234567890"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - content
              properties:
                content:
                  type: string
                  minLength: 1
                  maxLength: 280
                  description: Reply text content
                  example: "Great point! I completely agree."
      responses:
        '201':
          description: Reply created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TweetResponse'
              examples:
                replyCreated:
                  summary: Successfully created reply
                  value:
                    success: true
                    data:
                      tweet:
                        id: "1111111111"
                        user:
                          id: "9876543211"
                          username: "janedoe"
                          display_name: "Jane Doe"
                          avatar_url: "https://cdn.example.com/avatars/janedoe.jpg"
                          is_verified: false
                        content: "Great point! I completely agree."
                        created_at: "2025-10-13T11:10:00Z"
                        like_count: 0
                        retweet_count: 0
                        reply_count: 0
                        is_liked: false
                        is_retweeted: false
                        parent_tweet:
                          id: "1234567890"
                          user:
                            username: "johndoe"
                          content_preview: "Working on a new feature..."
        '400':
          $ref: '#/components/responses/ValidationError'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: |
        JWT access token obtained from /api/auth/login or /api/auth/refresh.

        Include in Authorization header as: `Authorization: Bearer <token>`

  schemas:
    TimelineResponse:
      type: object
      required:
        - success
        - data
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required:
            - tweets
            - has_more
          properties:
            tweets:
              type: array
              items:
                $ref: '#/components/schemas/Tweet'
              description: Array of tweet objects
            next_cursor:
              type: string
              nullable: true
              description: Cursor for next page (null if no more pages)
              example: "1697190000"
            has_more:
              type: boolean
              description: Whether more tweets are available
              example: true

    UserTimelineResponse:
      type: object
      required:
        - success
        - data
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required:
            - user
            - tweets
            - has_more
          properties:
            user:
              $ref: '#/components/schemas/UserProfile'
            tweets:
              type: array
              items:
                $ref: '#/components/schemas/Tweet'
            next_cursor:
              type: string
              nullable: true
              example: "1697190000"
            has_more:
              type: boolean
              example: true

    Tweet:
      type: object
      required:
        - id
        - user
        - content
        - created_at
        - like_count
        - retweet_count
        - reply_count
        - is_liked
        - is_retweeted
      properties:
        id:
          type: string
          description: Unique tweet identifier
          example: "1234567890"
        user:
          $ref: '#/components/schemas/UserSummary'
        content:
          type: string
          minLength: 1
          maxLength: 280
          description: Tweet text content
          example: "Hello, Twitter Clone! This is my first tweet."
        created_at:
          type: string
          format: date-time
          description: Tweet creation timestamp (ISO 8601)
          example: "2025-10-13T10:30:00Z"
        like_count:
          type: integer
          minimum: 0
          description: Number of likes
          example: 42
        retweet_count:
          type: integer
          minimum: 0
          description: Number of retweets
          example: 7
        reply_count:
          type: integer
          minimum: 0
          description: Number of replies
          example: 3
        is_liked:
          type: boolean
          description: Whether authenticated user has liked this tweet
          example: false
        is_retweeted:
          type: boolean
          description: Whether authenticated user has retweeted this tweet
          example: false
        parent_tweet:
          $ref: '#/components/schemas/ParentTweetPreview'
          nullable: true
          description: Preview of parent tweet if this is a reply

    UserSummary:
      type: object
      required:
        - id
        - username
        - display_name
        - avatar_url
        - is_verified
      properties:
        id:
          type: string
          description: Unique user identifier
          example: "9876543210"
        username:
          type: string
          description: Username (handle)
          example: "johndoe"
        display_name:
          type: string
          description: User's display name
          example: "John Doe"
        avatar_url:
          type: string
          format: uri
          description: URL to user's avatar image
          example: "https://cdn.example.com/avatars/johndoe.jpg"
        is_verified:
          type: boolean
          description: Whether user has verified badge
          example: false

    UserProfile:
      type: object
      required:
        - id
        - username
        - display_name
        - bio
        - avatar_url
        - followers_count
        - following_count
        - tweets_count
        - is_verified
        - created_at
      properties:
        id:
          type: string
          example: "9876543210"
        username:
          type: string
          example: "johndoe"
        display_name:
          type: string
          example: "John Doe"
        bio:
          type: string
          description: User biography (max 160 characters)
          example: "Software developer building cool stuff"
        avatar_url:
          type: string
          format: uri
          example: "https://cdn.example.com/avatars/johndoe.jpg"
        followers_count:
          type: integer
          minimum: 0
          example: 1500
        following_count:
          type: integer
          minimum: 0
          example: 300
        tweets_count:
          type: integer
          minimum: 0
          example: 450
        is_verified:
          type: boolean
          example: false
        created_at:
          type: string
          format: date-time
          example: "2025-01-15T08:00:00Z"

    ParentTweetPreview:
      type: object
      description: Preview of parent tweet (for replies)
      properties:
        id:
          type: string
          example: "1234567889"
        user:
          type: object
          properties:
            username:
              type: string
              example: "janedoe"
        content_preview:
          type: string
          description: Truncated content (first 50 characters)
          example: "This is the original tweet that was replied to..."

    CreateTweetRequest:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          minLength: 1
          maxLength: 280
          description: Tweet text content (1-280 characters)
          example: "Hello, world! This is my new tweet."
        parent_tweet_id:
          type: string
          nullable: true
          description: ID of tweet being replied to (null for original tweets)
          example: null

    TweetResponse:
      type: object
      required:
        - success
        - data
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required:
            - tweet
          properties:
            tweet:
              $ref: '#/components/schemas/Tweet'

    LikeResponse:
      type: object
      required:
        - success
        - data
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required:
            - tweet_id
            - is_liked
            - like_count
          properties:
            tweet_id:
              type: string
              description: ID of the liked/unliked tweet
              example: "1234567890"
            is_liked:
              type: boolean
              description: Current like state
              example: true
            like_count:
              type: integer
              minimum: 0
              description: Updated like count
              example: 43

    RetweetResponse:
      type: object
      required:
        - success
        - data
      properties:
        success:
          type: boolean
          example: true
        data:
          type: object
          required:
            - retweet
          properties:
            retweet:
              type: object
              required:
                - id
                - original_tweet_id
                - user_id
                - created_at
              properties:
                id:
                  type: string
                  description: Unique retweet identifier
                  example: "9876543210"
                original_tweet_id:
                  type: string
                  description: ID of the retweeted tweet
                  example: "1234567890"
                user_id:
                  type: string
                  description: ID of user who retweeted
                  example: "9876543211"
                created_at:
                  type: string
                  format: date-time
                  description: Retweet timestamp
                  example: "2025-10-13T11:05:00Z"

    ErrorResponse:
      type: object
      required:
        - success
        - error
      properties:
        success:
          type: boolean
          example: false
        error:
          type: object
          required:
            - code
            - message
          properties:
            code:
              type: string
              description: Machine-readable error code
              example: "VALIDATION_ERROR"
            message:
              type: string
              description: Human-readable error message
              example: "Invalid input data"
            details:
              type: object
              description: Additional error details (for validation errors)
              additionalProperties: true
              example:
                content: ["Content must be between 1 and 280 characters"]

  responses:
    Unauthorized:
      description: Unauthorized - Missing or invalid authentication token
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            missingToken:
              summary: Missing authentication token
              value:
                success: false
                error:
                  code: "UNAUTHORIZED"
                  message: "Authentication required"
            invalidToken:
              summary: Invalid or expired token
              value:
                success: false
                error:
                  code: "UNAUTHORIZED"
                  message: "Could not validate credentials"
            expiredToken:
              summary: Token expired
              value:
                success: false
                error:
                  code: "TOKEN_EXPIRED"
                  message: "Token expired"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            tweetNotFound:
              summary: Tweet not found
              value:
                success: false
                error:
                  code: "NOT_FOUND"
                  message: "Tweet not found"
            userNotFound:
              summary: User not found
              value:
                success: false
                error:
                  code: "NOT_FOUND"
                  message: "User not found"

    ValidationError:
      description: Validation error - Invalid input data
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            contentTooLong:
              summary: Tweet content exceeds 280 characters
              value:
                success: false
                error:
                  code: "VALIDATION_ERROR"
                  message: "Invalid input data"
                  details:
                    content: ["Content must be between 1 and 280 characters"]
            emptyContent:
              summary: Tweet content is empty
              value:
                success: false
                error:
                  code: "VALIDATION_ERROR"
                  message: "Invalid input data"
                  details:
                    content: ["Content cannot be empty"]

    RateLimitExceeded:
      description: Rate limit exceeded - Too many requests
      headers:
        X-RateLimit-Limit:
          description: Maximum requests allowed
          schema:
            type: integer
            example: 180
        X-RateLimit-Remaining:
          description: Remaining requests (0 when rate limited)
          schema:
            type: integer
            example: 0
        X-RateLimit-Reset:
          description: Unix timestamp when rate limit resets
          schema:
            type: integer
            example: 1697194800
        Retry-After:
          description: Seconds to wait before retrying
          schema:
            type: integer
            example: 300
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            rateLimited:
              summary: Rate limit exceeded
              value:
                success: false
                error:
                  code: "RATE_LIMIT_EXCEEDED"
                  message: "Too many requests. Please try again later."
                  details:
                    retry_after: 300

    InternalServerError:
      description: Internal server error - Unexpected error occurred
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            serverError:
              summary: Generic server error
              value:
                success: false
                error:
                  code: "INTERNAL_SERVER_ERROR"
                  message: "An unexpected error occurred"

security: []  # Default: No authentication (only specific endpoints require it)
